events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # DNS resolver for upstream domains (required in some container runtimes)
        resolver 1.1.1.1 ipv6=off;

        # API proxy to public backend domain
        location /api/ {
            proxy_pass https://api.miniboxgym.pt$request_uri;
            proxy_set_header Host api.miniboxgym.pt;
            # Ensure proper SNI for TLS to custom domain upstream
            proxy_ssl_server_name on;
            proxy_ssl_name api.miniboxgym.pt;
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # JavaScript files - explicit MIME type override
        location ~* \.(js|mjs)$ {
            default_type application/javascript;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # TypeScript files
        location ~* \.(ts|tsx)$ {
            default_type application/javascript;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # CSS files
        location ~* \.(css)$ {
            default_type text/css;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Image files
        location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Font files
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # SPA routing - fallback to index.html - MUST come last
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Legacy admin path redirect
        location = /admin {
            return 301 /admin.html;
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
    }
}
